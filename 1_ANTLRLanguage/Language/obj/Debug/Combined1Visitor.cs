//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\czobo\Documents\GitHub\BDG\BDG_Language\Language\Combined1.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Language {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="Combined1Parser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ICombined1Visitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>constExpression</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstExpression([NotNull] Combined1Parser.ConstExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>varExpression</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarExpression([NotNull] Combined1Parser.VarExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>listExpression</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListExpression([NotNull] Combined1Parser.ListExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>funcCallExpression</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncCallExpression([NotNull] Combined1Parser.FuncCallExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parentExpression</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParentExpression([NotNull] Combined1Parser.ParentExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpression([NotNull] Combined1Parser.NotExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>absExpression</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAbsExpression([NotNull] Combined1Parser.AbsExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>multExpression</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultExpression([NotNull] Combined1Parser.MultExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>addExpression</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddExpression([NotNull] Combined1Parser.AddExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>compExpression</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompExpression([NotNull] Combined1Parser.CompExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>boolExpression</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolExpression([NotNull] Combined1Parser.BoolExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>negExpression</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegExpression([NotNull] Combined1Parser.NegExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>inputExpression</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInputExpression([NotNull] Combined1Parser.InputExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>turnStagesExp</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTurnStagesExp([NotNull] Combined1Parser.TurnStagesExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>pMoveTypeExp</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPMoveTypeExp([NotNull] Combined1Parser.PMoveTypeExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>neighborsExp</c>
	/// labeled alternative in <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNeighborsExp([NotNull] Combined1Parser.NeighborsExpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] Combined1Parser.ProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComment([NotNull] Combined1Parser.CommentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine([NotNull] Combined1Parser.LineContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] Combined1Parser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.logStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogStatement([NotNull] Combined1Parser.LogStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.phase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPhase([NotNull] Combined1Parser.PhaseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfBlock([NotNull] Combined1Parser.IfBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.elseifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseifBlock([NotNull] Combined1Parser.ElseifBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.repeatUntil"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRepeatUntil([NotNull] Combined1Parser.RepeatUntilContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] Combined1Parser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] Combined1Parser.DeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] Combined1Parser.AssignmentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.stop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStop([NotNull] Combined1Parser.StopContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.cancel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCancel([NotNull] Combined1Parser.CancelContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] Combined1Parser.VariableContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.pieceType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPieceType([NotNull] Combined1Parser.PieceTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterList([NotNull] Combined1Parser.ParameterListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] Combined1Parser.TypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMember([NotNull] Combined1Parser.MemberContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitField([NotNull] Combined1Parser.FieldContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.tile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTile([NotNull] Combined1Parser.TileContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.collection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCollection([NotNull] Combined1Parser.CollectionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitList([NotNull] Combined1Parser.ListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElement([NotNull] Combined1Parser.ElementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBody([NotNull] Combined1Parser.FunctionBodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.functionBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBlock([NotNull] Combined1Parser.FunctionBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] Combined1Parser.FunctionCallContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.functionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionName([NotNull] Combined1Parser.FunctionNameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] Combined1Parser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.turnStages"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTurnStages([NotNull] Combined1Parser.TurnStagesContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInput([NotNull] Combined1Parser.InputContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.inputTypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInputTypes([NotNull] Combined1Parser.InputTypesContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.pieceMoveTypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPieceMoveTypes([NotNull] Combined1Parser.PieceMoveTypesContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.neighbors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNeighbors([NotNull] Combined1Parser.NeighborsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultOp([NotNull] Combined1Parser.MultOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddOp([NotNull] Combined1Parser.AddOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.compareOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareOp([NotNull] Combined1Parser.CompareOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolOp([NotNull] Combined1Parser.BoolOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] Combined1Parser.ConstantContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="Combined1Parser.color"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColor([NotNull] Combined1Parser.ColorContext context);
}
} // namespace Language
